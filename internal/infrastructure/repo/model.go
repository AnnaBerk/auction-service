// Code generated by mfd-generator v0.4.5; DO NOT EDIT.

//nolint:all
//lint:file-ignore U1000 ignore unused code, it's generated
package repo

import (
	"time"
)

var Columns = struct {
	Auction struct {
		ID, CreatedAt, ClosedAt, UserID, WinnerID string

		User, Winner string
	}
	Bid struct {
		ID, Price, CreatedAt, UserID, LotID, AuctionID string

		User, Lot, Auction string
	}
	Lot struct {
		ID, Title, StartPrice, Step, CreatedAt, AuctionID, UserID string

		Auction, User string
	}
	User struct {
		ID, Name, Email, Balance string
	}
}{
	Auction: struct {
		ID, CreatedAt, ClosedAt, UserID, WinnerID string

		User, Winner string
	}{
		ID:        "id",
		CreatedAt: "created_at",
		ClosedAt:  "closed_at",
		UserID:    "user_id",
		WinnerID:  "winner_id",

		User:   "User",
		Winner: "Winner",
	},
	Bid: struct {
		ID, Price, CreatedAt, UserID, LotID, AuctionID string

		User, Lot, Auction string
	}{
		ID:        "id",
		Price:     "price",
		CreatedAt: "created_at",
		UserID:    "user_id",
		LotID:     "lot_id",
		AuctionID: "auction_id",

		User:    "User",
		Lot:     "Lot",
		Auction: "Auction",
	},
	Lot: struct {
		ID, Title, StartPrice, Step, CreatedAt, AuctionID, UserID string

		Auction, User string
	}{
		ID:         "id",
		Title:      "title",
		StartPrice: "start_price",
		Step:       "step",
		CreatedAt:  "created_at",
		AuctionID:  "auction_id",
		UserID:     "user_id",

		Auction: "Auction",
		User:    "User",
	},
	User: struct {
		ID, Name, Email, Balance string
	}{
		ID:      "id",
		Name:    "name",
		Email:   "email",
		Balance: "balance",
	},
}

var Tables = struct {
	Auction struct {
		Name, Alias string
	}
	Bid struct {
		Name, Alias string
	}
	Lot struct {
		Name, Alias string
	}
	User struct {
		Name, Alias string
	}
}{
	Auction: struct {
		Name, Alias string
	}{
		Name:  "auction",
		Alias: "t",
	},
	Bid: struct {
		Name, Alias string
	}{
		Name:  "bid",
		Alias: "t",
	},
	Lot: struct {
		Name, Alias string
	}{
		Name:  "lot",
		Alias: "t",
	},
	User: struct {
		Name, Alias string
	}{
		Name:  "user",
		Alias: "t",
	},
}

type Auction struct {
	tableName struct{} `pg:"auction,alias:t,discard_unknown_columns"`

	ID        int        `pg:"id,pk"`
	CreatedAt time.Time  `pg:"created_at,use_zero"`
	ClosedAt  *time.Time `pg:"closed_at"`
	UserID    *int       `pg:"user_id"`
	WinnerID  *int       `pg:"winner_id"`

	User   *User `pg:"fk:user_id,rel:has-one"`
	Winner *User `pg:"fk:winner_id,rel:has-one"`
}

type Bid struct {
	tableName struct{} `pg:"bid,alias:t,discard_unknown_columns"`

	ID        int       `pg:"id,pk"`
	Price     int64     `pg:"price,use_zero"`
	CreatedAt time.Time `pg:"created_at,use_zero"`
	UserID    int       `pg:"user_id,use_zero"`
	LotID     int       `pg:"lot_id,use_zero"`
	AuctionID int       `pg:"auction_id,use_zero"`

	User    *User    `pg:"fk:user_id,rel:has-one"`
	Lot     *Lot     `pg:"fk:lot_id,rel:has-one"`
	Auction *Auction `pg:"fk:auction_id,rel:has-one"`
}

type Lot struct {
	tableName struct{} `pg:"lot,alias:t,discard_unknown_columns"`

	ID         int       `pg:"id,pk"`
	Title      string    `pg:"title,use_zero"`
	StartPrice int64     `pg:"start_price,use_zero"`
	Step       int64     `pg:"step,use_zero"`
	CreatedAt  time.Time `pg:"created_at,use_zero"`
	AuctionID  int       `pg:"auction_id,use_zero"`
	UserID     int       `pg:"user_id,use_zero"`

	Auction *Auction `pg:"fk:auction_id,rel:has-one"`
	User    *User    `pg:"fk:user_id,rel:has-one"`
}

type User struct {
	tableName struct{} `pg:"user,alias:t,discard_unknown_columns"`

	ID      int    `pg:"id,pk"`
	Name    string `pg:"name,use_zero"`
	Email   string `pg:"email,use_zero"`
	Balance *int64 `pg:"balance"`
}
